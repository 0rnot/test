(()=>{"use strict";var n={56:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},72:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var r={},a=[],s=0;s<n.length;s++){var A=n[s],d=o.base?A[0]+o.base:A[0],c=r[d]||0,l="".concat(d," ").concat(c);r[d]=c+1;var p=e(l),h={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(h);else{var u=i(h,o);o.byIndex=s,t.splice(s,0,{identifier:l,updater:u,references:1})}a.push(l)}return a}function i(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var s=e(r[a]);t[s].references--}for(var A=o(n,i),d=0;d<r.length;d++){var c=e(r[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=A}}},208:(n,t,e)=>{e.d(t,{A:()=>s});var o=e(354),i=e.n(o),r=e(314),a=e.n(r)()(i());a.push([n.id,"html, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: 'MS PGothic', 'Osaka', sans-serif;\n    background-color: #FFF0F5; /* Lavender Blush - very light pink */\n}\n\n#app {\n    width: 100%;\n    height: 100%;\n}\n\n.desktop {\n    width: 100%;\n    height: calc(100% - 40px);\n    background: #FADADD; /* Lighter, softer pink */\n    position: relative;\n}\n\n.desktop-title {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 64px;\n    color: rgba(255, 255, 255, 0.8);\n    font-weight: bold;\n    text-shadow: 1px 1px 3px #FFBCD9;\n    pointer-events: none;\n}\n\n.desktop-icon {\n    position: absolute;\n    width: 80px;\n    height: 100px;\n    text-align: center;\n    cursor: pointer;\n    padding: 10px;\n    border: 1px solid transparent;\n}\n\n.desktop-icon:hover {\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.icon-image {\n    width: 50px;\n    height: 50px;\n    margin: 0 auto;\n}\n\n.icon-label {\n    margin-top: 10px;\n    color: #fff;\n    text-shadow: 1px 1px 2px #000;\n    font-size: 14px;\n}\n\n.taskbar {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 40px;\n    background: #FFDDEE;\n    border-top: 1px solid #FFFFFF;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    z-index: 10000;\n}\n\n.start-button {\n    height: 30px;\n    padding: 0 15px;\n    border: 1px outset #fff;\n    background-color: #FFDDEE;\n    font-weight: bold;\n    color: #5b5b5b;\n    cursor: pointer;\n}\n.start-button:active {\n    border-style: inset;\n}\n\n.taskbar-apps {\n    display: flex;\n    height: 100%;\n    margin-left: 5px;\n}\n\n.taskbar-button {\n    height: 30px;\n    margin: 5px 2px;\n    padding: 0 10px;\n    border: 1px outset #fff;\n    background-color: #FFDDEE;\n    color: #5b5b5b;\n    cursor: pointer;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 150px;\n}\n.taskbar-button:active {\n    border-style: inset;\n}\n\n.start-menu {\n    position: absolute;\n    bottom: 40px; /* Height of the taskbar */\n    left: 0;\n    width: 250px;\n    background-color: #FFF0F5;\n    border: 1px outset #fff;\n    padding: 5px;\n    display: none;\n    z-index: 9999;\n}\n\n.start-menu.show {\n    display: block;\n}\n\n.start-menu-item {\n    display: block;\n    width: 100%;\n    padding: 8px 10px;\n    text-align: left;\n    background: none;\n    border: none;\n    color: #333;\n    cursor: pointer;\n}\n\n.start-menu-item:hover {\n    background-color: #FFBCD9;\n    color: #fff;\n}\n\n.start-menu-separator {\n    height: 1px;\n    background-color: #FFBCD9;\n    margin: 5px 0;\n}\n\n.access-counter {\n    margin-left: auto;\n    padding: 5px 10px;\n    border: 1px solid #FFDDEE;\n    background-color: #FFF0F5;\n    color: #333;\n    margin-right: 10px; /* Add margin to separate from clock */\n}\n\n.clock {\n    padding: 5px 10px;\n    border: 1px solid #FFDDEE;\n    background-color: #FFF0F5;\n    color: #333;\n}\n\n.app-window {\n    position: absolute;\n    top: 50px;\n    left: 50px;\n    width: 500px;\n    min-height: 150px; /* Minimum height */\n    border: 1px solid #FFBCD9;\n    border-radius: 5px;\n    background-color: #ffffff;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    display: flex;\n    flex-direction: column;\n}\n\n.app-window.active .title-bar {\n    background: #FFBCD9;\n    color: #444;\n}\n\n.title-bar {\n    background: #FFDDEE;\n    color: #666;\n    padding: 5px 8px;\n    font-weight: bold;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: move;\n    user-select: none;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n}\n\n.window-controls {\n    display: flex;\n}\n\n.window-button {\n    width: 22px;\n    height: 22px;\n    margin-left: 3px;\n    border: 1px solid #FFBCD9;\n    border-radius: 3px;\n    background-color: #FFF0F5;\n    color: #333;\n    font-size: 12px;\n    font-weight: bold;\n    line-height: 20px;\n    text-align: center;\n    cursor: pointer;\n}\n.window-button:hover {\n    background-color: #FFDDEE;\n}\n.window-button:active {\n    background-color: #FFBCD9;\n}\n\n.content-area {\n    flex-grow: 1;\n    background-color: #ffffff;\n    color: #000;\n    margin: 0 5px 5px 5px;\n    padding: 10px;\n    border: 1px solid #FFDDEE;\n    border-top: none;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    overflow: auto;\n}\n\n.content-area pre {\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    font-family: 'Meiryo', 'Hiragino Kaku Gothic ProN', sans-serif;\n    font-size: 14px;\n    line-height: 1.6;\n}\n\n.shutdown-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #000;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    z-index: 20000;\n    font-size: 24px;\n}\n\n.progress-bar-container {\n    width: 300px;\n    height: 20px;\n    border: 1px solid #fff;\n    margin-top: 20px;\n}\n\n.progress-bar {\n    width: 0%;\n    height: 100%;\n    background-color: #FFBCD9;\n    transition: width 0.1s linear;\n}\n\n/* Responsive Design for Mobile */\n@media (max-width: 768px) {\n    .desktop-title {\n        font-size: 48px;\n    }\n\n    .desktop-icon {\n        width: 70px;\n        height: 90px;\n        padding: 5px;\n    }\n\n    .icon-image {\n        width: 40px;\n        height: 40px;\n    }\n\n    .icon-label {\n        font-size: 12px;\n    }\n\n    .app-window {\n        width: calc(100% - 20px);\n        height: calc(100% - 60px);\n        top: 10px;\n        left: 10px;\n    }\n\n    .taskbar {\n        height: 50px;\n    }\n\n    .start-menu {\n        bottom: 50px;\n    }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,8CAA8C;IAC9C,yBAAyB,EAAE,qCAAqC;AACpE;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,yBAAyB;IACzB,mBAAmB,EAAE,yBAAyB;IAC9C,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,eAAe;IACf,+BAA+B;IAC/B,iBAAiB;IACjB,gCAAgC;IAChC,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,6BAA6B;AACjC;;AAEA;IACI,oCAAoC;IACpC,0CAA0C;AAC9C;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,OAAO;IACP,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,6BAA6B;IAC7B,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,uBAAuB;IACvB,yBAAyB;IACzB,iBAAiB;IACjB,cAAc;IACd,eAAe;AACnB;AACA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,eAAe;IACf,uBAAuB;IACvB,yBAAyB;IACzB,cAAc;IACd,eAAe;IACf,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,gBAAgB;AACpB;AACA;IACI,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,YAAY,EAAE,0BAA0B;IACxC,OAAO;IACP,YAAY;IACZ,yBAAyB;IACzB,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,WAAW;AACf;;AAEA;IACI,WAAW;IACX,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,yBAAyB;IACzB,yBAAyB;IACzB,WAAW;IACX,kBAAkB,EAAE,sCAAsC;AAC9D;;AAEA;IACI,iBAAiB;IACjB,yBAAyB;IACzB,yBAAyB;IACzB,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,YAAY;IACZ,iBAAiB,EAAE,mBAAmB;IACtC,yBAAyB;IACzB,kBAAkB;IAClB,yBAAyB;IACzB,sCAAsC;IACtC,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,mBAAmB;IACnB,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;IACjB,2BAA2B;IAC3B,4BAA4B;AAChC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,yBAAyB;IACzB,kBAAkB;IAClB,yBAAyB;IACzB,WAAW;IACX,eAAe;IACf,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;AACnB;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,yBAAyB;IACzB,WAAW;IACX,qBAAqB;IACrB,aAAa;IACb,yBAAyB;IACzB,gBAAgB;IAChB,8BAA8B;IAC9B,+BAA+B;IAC/B,cAAc;AAClB;;AAEA;IACI,qBAAqB;IACrB,qBAAqB;IACrB,8DAA8D;IAC9D,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,YAAY;IACZ,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA,iCAAiC;AACjC;IACI;QACI,eAAe;IACnB;;IAEA;QACI,WAAW;QACX,YAAY;QACZ,YAAY;IAChB;;IAEA;QACI,WAAW;QACX,YAAY;IAChB;;IAEA;QACI,eAAe;IACnB;;IAEA;QACI,wBAAwB;QACxB,yBAAyB;QACzB,SAAS;QACT,UAAU;IACd;;IAEA;QACI,YAAY;IAChB;;IAEA;QACI,YAAY;IAChB;AACJ",sourcesContent:["html, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: 'MS PGothic', 'Osaka', sans-serif;\n    background-color: #FFF0F5; /* Lavender Blush - very light pink */\n}\n\n#app {\n    width: 100%;\n    height: 100%;\n}\n\n.desktop {\n    width: 100%;\n    height: calc(100% - 40px);\n    background: #FADADD; /* Lighter, softer pink */\n    position: relative;\n}\n\n.desktop-title {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 64px;\n    color: rgba(255, 255, 255, 0.8);\n    font-weight: bold;\n    text-shadow: 1px 1px 3px #FFBCD9;\n    pointer-events: none;\n}\n\n.desktop-icon {\n    position: absolute;\n    width: 80px;\n    height: 100px;\n    text-align: center;\n    cursor: pointer;\n    padding: 10px;\n    border: 1px solid transparent;\n}\n\n.desktop-icon:hover {\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.icon-image {\n    width: 50px;\n    height: 50px;\n    margin: 0 auto;\n}\n\n.icon-label {\n    margin-top: 10px;\n    color: #fff;\n    text-shadow: 1px 1px 2px #000;\n    font-size: 14px;\n}\n\n.taskbar {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 40px;\n    background: #FFDDEE;\n    border-top: 1px solid #FFFFFF;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    z-index: 10000;\n}\n\n.start-button {\n    height: 30px;\n    padding: 0 15px;\n    border: 1px outset #fff;\n    background-color: #FFDDEE;\n    font-weight: bold;\n    color: #5b5b5b;\n    cursor: pointer;\n}\n.start-button:active {\n    border-style: inset;\n}\n\n.taskbar-apps {\n    display: flex;\n    height: 100%;\n    margin-left: 5px;\n}\n\n.taskbar-button {\n    height: 30px;\n    margin: 5px 2px;\n    padding: 0 10px;\n    border: 1px outset #fff;\n    background-color: #FFDDEE;\n    color: #5b5b5b;\n    cursor: pointer;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 150px;\n}\n.taskbar-button:active {\n    border-style: inset;\n}\n\n.start-menu {\n    position: absolute;\n    bottom: 40px; /* Height of the taskbar */\n    left: 0;\n    width: 250px;\n    background-color: #FFF0F5;\n    border: 1px outset #fff;\n    padding: 5px;\n    display: none;\n    z-index: 9999;\n}\n\n.start-menu.show {\n    display: block;\n}\n\n.start-menu-item {\n    display: block;\n    width: 100%;\n    padding: 8px 10px;\n    text-align: left;\n    background: none;\n    border: none;\n    color: #333;\n    cursor: pointer;\n}\n\n.start-menu-item:hover {\n    background-color: #FFBCD9;\n    color: #fff;\n}\n\n.start-menu-separator {\n    height: 1px;\n    background-color: #FFBCD9;\n    margin: 5px 0;\n}\n\n.access-counter {\n    margin-left: auto;\n    padding: 5px 10px;\n    border: 1px solid #FFDDEE;\n    background-color: #FFF0F5;\n    color: #333;\n    margin-right: 10px; /* Add margin to separate from clock */\n}\n\n.clock {\n    padding: 5px 10px;\n    border: 1px solid #FFDDEE;\n    background-color: #FFF0F5;\n    color: #333;\n}\n\n.app-window {\n    position: absolute;\n    top: 50px;\n    left: 50px;\n    width: 500px;\n    min-height: 150px; /* Minimum height */\n    border: 1px solid #FFBCD9;\n    border-radius: 5px;\n    background-color: #ffffff;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    display: flex;\n    flex-direction: column;\n}\n\n.app-window.active .title-bar {\n    background: #FFBCD9;\n    color: #444;\n}\n\n.title-bar {\n    background: #FFDDEE;\n    color: #666;\n    padding: 5px 8px;\n    font-weight: bold;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: move;\n    user-select: none;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n}\n\n.window-controls {\n    display: flex;\n}\n\n.window-button {\n    width: 22px;\n    height: 22px;\n    margin-left: 3px;\n    border: 1px solid #FFBCD9;\n    border-radius: 3px;\n    background-color: #FFF0F5;\n    color: #333;\n    font-size: 12px;\n    font-weight: bold;\n    line-height: 20px;\n    text-align: center;\n    cursor: pointer;\n}\n.window-button:hover {\n    background-color: #FFDDEE;\n}\n.window-button:active {\n    background-color: #FFBCD9;\n}\n\n.content-area {\n    flex-grow: 1;\n    background-color: #ffffff;\n    color: #000;\n    margin: 0 5px 5px 5px;\n    padding: 10px;\n    border: 1px solid #FFDDEE;\n    border-top: none;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    overflow: auto;\n}\n\n.content-area pre {\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    font-family: 'Meiryo', 'Hiragino Kaku Gothic ProN', sans-serif;\n    font-size: 14px;\n    line-height: 1.6;\n}\n\n.shutdown-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #000;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    z-index: 20000;\n    font-size: 24px;\n}\n\n.progress-bar-container {\n    width: 300px;\n    height: 20px;\n    border: 1px solid #fff;\n    margin-top: 20px;\n}\n\n.progress-bar {\n    width: 0%;\n    height: 100%;\n    background-color: #FFBCD9;\n    transition: width 0.1s linear;\n}\n\n/* Responsive Design for Mobile */\n@media (max-width: 768px) {\n    .desktop-title {\n        font-size: 48px;\n    }\n\n    .desktop-icon {\n        width: 70px;\n        height: 90px;\n        padding: 5px;\n    }\n\n    .icon-image {\n        width: 40px;\n        height: 40px;\n    }\n\n    .icon-label {\n        font-size: 12px;\n    }\n\n    .app-window {\n        width: calc(100% - 20px);\n        height: calc(100% - 60px);\n        top: 10px;\n        left: 10px;\n    }\n\n    .taskbar {\n        height: 50px;\n    }\n\n    .start-menu {\n        bottom: 50px;\n    }\n}\n"],sourceRoot:""}]);const s=a},284:n=>{var t,e=(t=[],function(n,e){return t[n]=e,t.filter(Boolean).join("\n")});function o(n,t,o,i){var r;if(o)r="";else{r="",i.supports&&(r+="@supports (".concat(i.supports,") {")),i.media&&(r+="@media ".concat(i.media," {"));var a=void 0!==i.layer;a&&(r+="@layer".concat(i.layer.length>0?" ".concat(i.layer):""," {")),r+=i.css,a&&(r+="}"),i.media&&(r+="}"),i.supports&&(r+="}")}if(n.styleSheet)n.styleSheet.cssText=e(t,r);else{var s=document.createTextNode(r),A=n.childNodes;A[t]&&n.removeChild(A[t]),A.length?n.insertBefore(s,A[t]):n.appendChild(s)}}var i={singleton:null,singletonCounter:0};n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=i.singletonCounter++,e=i.singleton||(i.singleton=n.insertStyleElement(n));return{update:function(n){o(e,t,!1,n)},remove:function(n){o(e,t,!0,n)}}}},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map(function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e}).join("")},t.i=function(n,e,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&a[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),t.push(c))}},t}},354:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},540:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},659:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}}},t={};function e(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return n[o](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.p="/test/",e.nc=void 0;var o=e(72),i=e.n(o),r=e(284),a=e.n(r),s=e(659),A=e.n(s),d=e(56),c=e.n(d),l=e(540),p=e.n(l),h=e(208),u={};u.setAttributes=c(),u.insert=A().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=p(),i()(h.A,u),h.A&&h.A.locals&&h.A.locals;class m{constructor(){this.windows=[],this.topZIndex=100,this.taskbarElement=document.querySelector(".taskbar-apps")}static getInstance(){return m.instance||(m.instance=new m),m.instance}register(n){this.windows.push(n),this.bringToFront(n.getElement()),this.createTaskbarButton(n)}unregister(n){const t=this.windows.indexOf(n);t>-1&&this.windows.splice(t,1),this.removeTaskbarButton(n)}bringToFront(n){this.windows.forEach(n=>n.getElement().classList.remove("active")),n.classList.add("active"),n.style.zIndex=(this.topZIndex++).toString()}createTaskbarButton(n){const t=document.createElement("button");t.className="taskbar-button",t.textContent=n.getTitle(),t.dataset.windowId=n.getId(),t.addEventListener("click",()=>{n.toggleMinimize(),this.bringToFront(n.getElement())}),this.taskbarElement.appendChild(t)}removeTaskbarButton(n){const t=this.taskbarElement.querySelector(`[data-window-id="${n.getId()}"]`);t&&t.remove()}}let g=0;class C{constructor(n,t,e={}){var o;this.isDragging=!1,this.dragStartX=0,this.dragStartY=0,this.isMinimized=!1,this.id="window-"+g++,this.title=n,this.windowManager=m.getInstance(),this.element=document.createElement("div"),this.element.className="app-window",this.element.dataset.windowId=this.id,e.width&&(this.element.style.width=`${e.width}px`),e.height&&(this.element.style.height=`${e.height}px`),this.titleBar=this.createTitleBar(n),this.contentArea=this.createContentArea(t),this.element.appendChild(this.titleBar),this.element.appendChild(this.contentArea),null===(o=document.querySelector(".desktop"))||void 0===o||o.appendChild(this.element),this.windowManager.register(this),this.setupEventListeners(),e.adjustHeight&&this.adjustHeightToContent()}getId(){return this.id}getTitle(){return this.title}getElement(){return this.element}adjustHeightToContent(){setTimeout(()=>{const n=this.contentArea.scrollHeight,t=this.titleBar.offsetHeight;this.element.style.height=`${n+t+20}px`},0)}createTitleBar(n){const t=document.createElement("div");t.className="title-bar";const e=document.createElement("span");e.textContent=n,t.appendChild(e);const o=document.createElement("div");o.className="window-controls";const i=document.createElement("button");i.className="window-button minimize-button",i.textContent="_",o.appendChild(i);const r=document.createElement("button");return r.className="window-button close-button",r.textContent="×",o.appendChild(r),t.appendChild(o),t}createContentArea(n){const t=document.createElement("div");return t.className="content-area","string"==typeof n?t.innerHTML=`<pre>${n}</pre>`:t.appendChild(n),t}setupEventListeners(){this.element.addEventListener("mousedown",()=>{this.windowManager.bringToFront(this.element)}),this.titleBar.addEventListener("mousedown",n=>this.onDragStart(n)),document.addEventListener("mousemove",n=>this.onDrag(n)),document.addEventListener("mouseup",()=>this.onDragEnd()),this.titleBar.addEventListener("touchstart",n=>this.onDragStart(n)),document.addEventListener("touchmove",n=>this.onDrag(n)),document.addEventListener("touchend",()=>this.onDragEnd());const n=this.titleBar.querySelector(".minimize-button");null==n||n.addEventListener("click",()=>this.minimize());const t=this.titleBar.querySelector(".close-button");null==t||t.addEventListener("click",()=>this.close())}onDragStart(n){if(!(n.target instanceof HTMLButtonElement))if(this.isDragging=!0,this.windowManager.bringToFront(this.element),n instanceof MouseEvent)this.dragStartX=n.clientX-this.element.offsetLeft,this.dragStartY=n.clientY-this.element.offsetTop;else{const t=n.touches[0];this.dragStartX=t.clientX-this.element.offsetLeft,this.dragStartY=t.clientY-this.element.offsetTop}}onDrag(n){if(this.isDragging){let t=0,e=0;if(n instanceof MouseEvent)t=n.clientX,e=n.clientY;else{const o=n.touches[0];t=o.clientX,e=o.clientY}this.element.style.left=t-this.dragStartX+"px",this.element.style.top=e-this.dragStartY+"px"}}onDragEnd(){this.isDragging=!1}minimize(){this.isMinimized=!0,this.element.style.display="none"}restore(){this.isMinimized=!1,this.element.style.display="flex",this.windowManager.bringToFront(this.element)}toggleMinimize(){this.isMinimized?this.restore():this.element.classList.contains("active")?this.minimize():this.windowManager.bringToFront(this.element)}close(){this.windowManager.unregister(this),this.element.remove()}show(){this.element.style.display="flex",this.windowManager.bringToFront(this.element)}}class B{constructor(n,t,e,o){var i;this.id=n,this.name=t,this.icon=e,this.onOpen=o,this.lastTap=0,this.element=document.createElement("div"),this.element.className="desktop-icon",this.element.dataset.iconId=this.id;const r=document.createElement("img");r.className="icon-image",r.src=this.icon,this.element.appendChild(r);const a=document.createElement("div");a.className="icon-label",a.textContent=this.name,this.element.appendChild(a),null===(i=document.querySelector(".desktop"))||void 0===i||i.appendChild(this.element),this.setupEventListeners()}getElement(){return this.element}setupEventListeners(){let n;this.element.addEventListener("dblclick",()=>{this.onOpen()}),this.element.addEventListener("touchend",n=>{const t=(new Date).getTime(),e=t-this.lastTap;e<300&&e>0&&(this.onOpen(),n.preventDefault()),this.lastTap=t}),this.element.addEventListener("touchstart",t=>{t.touches.length>1||(n=window.setTimeout(()=>{},300))}),this.element.addEventListener("touchend",t=>{clearTimeout(n),1===t.changedTouches.length&&(new Date).getTime()-this.lastTap>300&&setTimeout(()=>{(new Date).getTime()-this.lastTap>300&&this.onOpen()},310)})}}const x=e.p+"4f0c37d69fa3b9c9e9a5.webp",f=e.p+"d218d91ce3cc709c498b.png",b=document.getElementById("app");if(b){const I=document.createElement("div");I.className="desktop",b.appendChild(I);const w=document.createElement("h1");w.className="desktop-title",w.textContent="Sophia.exe",I.appendChild(w);const v=document.createElement("div");v.className="taskbar",b.appendChild(v);const E=document.createElement("button");E.className="start-button",E.textContent="スタート",v.appendChild(E);const y=document.createElement("div");y.className="taskbar-apps",v.appendChild(y);const k=document.createElement("div");k.className="access-counter",k.textContent="ACCESS: ...",v.appendChild(k),fetch("https://api.countapi.xyz/hit/0rnot.github.io/sophia-exe-test").then(n=>n.json()).then(n=>{k.textContent=`ACCESS: ${n.value.toLocaleString()}`}).catch(n=>{console.error("Could not fetch access count.",n),k.textContent="ACCESS: ???"});const F=document.createElement("div");function D(){const n=new Date,t=n.getHours().toString().padStart(2,"0"),e=n.getMinutes().toString().padStart(2,"0");F.textContent=`${t}:${e}`}F.className="clock",v.appendChild(F),setInterval(D,1e3),D();const Y=()=>{const n=window.innerWidth,t=window.innerHeight-40,e=50+Math.random()*(n-550);return{top:50+Math.random()*(t-450)+"px",left:`${e}px`}},z=[{id:"intro",name:"Sophiaの自己紹介.txt",icon:f,content:"\nやっほー！私の名前はソフィア！\nマスターのPCに住んでるアシスタントAIだよ。\n\n音楽を聴いたり、おしゃべりしたり、\n簡単なゲームで遊んだりするのが大好き！\n    ",options:{adjustHeight:!0}},{id:"chat",name:"チャット機能.txt",icon:f,content:"\nねぇねぇ！ソフィアとお話しよ！\n\n  **私とおしゃべり**\n  ・私にメンション（@Sophia BOT）したり、\n    「ソフィア」って呼んでくれたらお返事するよ！\n\n  ・画像と一緒に話しかけてくれたら、\n    その画像についてもお話しちゃう！\n    ",options:{adjustHeight:!0}},{id:"music",name:"音楽コマンド.txt",icon:f,content:"\n一緒に音楽、聴こっか！\n\n  /join          - 私がお部屋にお邪魔するね！\n  /leave         - 私がお部屋からバイバイするよ\n  /play          - この曲再生して！ってお願いできるよ\n  /skip          - 今の曲はもういいかな？次の曲に飛ぶよ！\n  /stop          - 再生を止めて、キューもぜーんぶおしまい！\n  /pause         - ちょっと待った！今の曲を一時停止するよ\n  /resume        - さっき止めた曲の続きから、また再生するね！\n  /loop          - ずーっと聴いてたい！曲を無限ループ♪\n  /loop_queue    - キュー全体を無限ループしちゃう！\n  /queue         - 次は何の曲かな？キューをチェック！\n    ",options:{}},{id:"rpg",name:"RPGのルール.txt",icon:f,content:"\nRPG機能のコマンドとルールだよ！\n\n  **コマンド**\n  /vlevel       - レベルと所持ゴールドを表示！\n  /vinventory   - インベントリを表示！\n  /vequip <ID>  - 指定したIDのアイテムを装備！\n  /vstats       - 装備とステータスを表示！\n  /vbattle      - ランダムな敵とバトル！\n  /vsell <ID>   - いらないアイテムは売っちゃお！\n\n  **ステータス**\n  ・HP : レベル + 10\n  ・ATK: 装備してる武器と防具のATK合計値\n  ・DEF: 装備してる武器と防具のDEF合計値\n\n  **戦闘**\n  ・攻撃: あなたのATK - 敵のDEF がダメージ！\n  ・防御: あなたのDEFの1割ぶん、HPが回復するよ！\n  ・逃走: 戦いから逃げることもできるよ。\n\n  **確率と売値**\n  ・common:      33.9% / 500G\n  ・uncommon:    30%   / 1000G\n  ・rare:        20%   / 2500G\n  ・epic:        10%   / 5000G\n  ・legendary:   5%    / 10000G\n  ・mythic:      1%    / 15000G\n  ・unique:      0.1%  / 50000G\n    ",options:{}},{id:"other",name:"その他機能.txt",icon:f,content:"メッセージを右クリックすると、こんなこともできるよ！\n\n  ・'このメッセージをAIで要約して'\n  ・'このメッセージを一番下に表示し続ける'\n  ・'このメッセージを後で消すね'\n  ・'メッセージを埋め込みにする'\n  ・'メッセージの文字数を数える'",options:{adjustHeight:!0}},{id:"sophia_icon",name:"sophia_icon.png",icon:x,content:`<img src="${x}" style="width: 100%; height: 100%; object-fit: contain;">`,options:{width:250,height:250}}],S={},T={x:20,y:20,xGap:100,yGap:110,iconsPerRow:Math.floor((window.innerHeight-60)/110)};window.innerWidth<768&&(T.xGap=80,T.yGap=100,T.iconsPerRow=Math.floor((window.innerHeight-60)/100)),z.forEach((n,t)=>{const e=new B(n.id,n.name,n.icon,()=>{var t;if(S[n.id])null===(t=S[n.id])||void 0===t||t.show();else{const t=new C(n.name,n.content,n.options),e=Y();t.getElement().style.top=e.top,t.getElement().style.left=e.left;const o=t.close.bind(t);t.close=()=>{o(),S[n.id]=null},S[n.id]=t}}).getElement(),o=t%T.iconsPerRow,i=Math.floor(t/T.iconsPerRow);e.style.top=`${T.y+o*T.yGap}px`,e.style.left=`${T.x+i*T.xGap}px`});const L=document.createElement("div");L.className="start-menu",b.appendChild(L);const W=document.createElement("button");W.className="start-menu-item",W.textContent="このサイトをシェア",W.addEventListener("click",()=>{navigator.clipboard.writeText("https://0rnot.github.io/test").then(()=>alert("クリップボードにURLをコピーしたよ！")).catch(()=>alert("コピーに失敗しちゃった…ごめんね！")),L.classList.remove("show")}),L.appendChild(W);const M=document.createElement("button");M.className="start-menu-item",M.textContent="Botをサーバーに追加",M.addEventListener("click",()=>{window.open("https://discord.com/oauth2/authorize?client_id=1367449249700253737&permissions=8&integration_type=0&scope=bot+applications.commands","_blank"),L.classList.remove("show")}),L.appendChild(M);const j=document.createElement("div");j.className="start-menu-separator",L.appendChild(j);const N=document.createElement("button");N.className="start-menu-item",N.textContent="再起動",N.addEventListener("click",()=>{L.classList.remove("show");const n=document.createElement("div");n.className="shutdown-overlay";const t=document.createElement("div");t.className="progress-bar-container";const e=document.createElement("div");e.className="progress-bar";const o=document.createElement("p");o.textContent="再起動しています...",t.appendChild(e),n.appendChild(o),n.appendChild(t),document.body.appendChild(n);let i=0;const r=setInterval(()=>{i+=10*Math.random(),i>100&&(i=100,clearInterval(r),setTimeout(()=>{location.reload()},500)),e.style.width=`${i}%`},150)}),L.appendChild(N),E.addEventListener("click",n=>{n.stopPropagation(),L.classList.toggle("show")}),document.addEventListener("click",()=>{L.classList.remove("show")})}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,